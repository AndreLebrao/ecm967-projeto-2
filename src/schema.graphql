type Usuario {
  id: ID!
  login: String!
  senha: String!
  mensagens: [Mensagem!]
}

type Mensagem {
  id: ID!
  texto: String!
  categoria: String!
  datahora: Float!
}

type Log {
  id: ID!
  operacao: String!
  datahora: Float!
}

type Query {
  # totaisPorCategoria: data:{"cinema":2,"esportes":5,"geral":0}
  historico: [Mensagem!]!
  logs(login: String!, senha: String!): [Log!]!
  usuario: [Usuario!]!
  mensagem: [Mensagem!]!
}

type Mutation {
  inserirMensagem(msg: InserirMensagemInput): Mensagem!
}

type Subscription {
  cinema: MensagemPayload!
  esportes: MensagemPayload!
  geral: MensagemPayload!
  logs(login: String!, senha: String!): [Log!]!
}

input InserirMensagemInput {
  texto: String!
  categoria: String!
}

type MensagemPayload {
  texto: String!
  datahora: Float!
}

type TotaisPorCategoriaPayload {
  cinema: Int!
  esportes: Int!
  geral: Int!
}
